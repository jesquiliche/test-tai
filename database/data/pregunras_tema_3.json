[
    {
        "pregunta": "¿Qué estructura de datos permite acceder a sus elementos en tiempo constante?",
        "a": "Árbol binario",
        "b": "Pila",
        "c": "Cola",
        "d": "Tabla hash",
        "respuesta": "d",
        "categoria_id": 14
    },
    {
        "pregunta": "¿Qué estructura de datos se utiliza para almacenar elementos en orden de llegada?",
        "a": "Pila",
        "b": "Cola",
        "c": "Árbol binario",
        "d": "Tabla hash",
        "respuesta": "b",
        "categoria_id": 14
    },
    {
        "pregunta": "¿Qué estructura de datos se utiliza para representar relaciones de uno a muchos?",
        "a": "Tabla hash",
        "b": "Árbol binario",
        "c": "Lista enlazada",
        "d": "Pila",
        "respuesta": "c",
        "categoria_id": 14
    },
    {
        "pregunta": "¿Qué estructura de datos permite almacenar pares clave-valor?",
        "a": "Pila",
        "b": "Cola",
        "c": "Árbol binario",
        "d": "Tabla hash",
        "respuesta": "d",
        "categoria_id": 14
    },
    {
        "pregunta": "¿Qué estructura de datos se utiliza para representar relaciones de muchos a muchos?",
        "a": "Tabla hash",
        "b": "Árbol binario",
        "c": "Grafo",
        "d": "Pila",
        "respuesta": "c",
        "categoria_id": 14
    },
    {
        "pregunta": "¿Cuál es la complejidad temporal promedio de la operación de inserción en una tabla hash?",
        "a": "O(1)",
        "b": "O(n)",
        "c": "O(log n)",
        "d": "O(n^2)",
        "respuesta": "a",
        "categoria_id": 14
    },
    {
        "pregunta": "¿Qué estructura de datos se utiliza para representar una secuencia de elementos ordenados?",
        "a": "Cola",
        "b": "Pila",
        "c": "Árbol binario",
        "d": "Lista",
        "respuesta": "d",
        "categoria_id": 14
    },
    {
        "pregunta": "¿Cuál es la complejidad temporal promedio de la operación de búsqueda en un árbol binario de búsqueda?",
        "a": "O(1)",
        "b": "O(n)",
        "c": "O(log n)",
        "d": "O(n^2)",
        "respuesta": "c",
        "categoria_id": 14
    },
    {
        "pregunta": "¿Qué estructura de datos se utiliza para almacenar elementos únicos en orden arbitrario?",
        "a": "Conjunto",
        "b": "Mapa",
        "c": "Pila",
        "d": "Cola",
        "respuesta": "a",
        "categoria_id": 14
    },
    {
        "pregunta": "¿Qué estructura de datos se utiliza para almacenar elementos únicos en orden arbitrario?",
        "a": "Conjunto",
        "b": "Mapa",
        "c": "Pila",
        "d": "Cola",
        "respuesta": "a",
        "categoria_id": 14
    },
    {
        "pregunta": "¿Cuál es la complejidad temporal del algoritmo de ordenamiento de burbuja en el peor de los casos?",
        "a": "O(1)",
        "b": "O(n)",
        "c": "O(n log n)",
        "d": "O(n^2)",
        "respuesta": "d",
        "categoria_id": 14
    },
    {
        "pregunta": "¿Cuál es la complejidad temporal del algoritmo de ordenamiento quicksort en el peor de los casos?",
        "a": "O(1)",
        "b": "O(n)",
        "c": "O(n log n)",
        "d": "O(n^2)",
        "respuesta": "d",
        "categoria_id": 14
    },
    {
        "pregunta": "¿Qué algoritmo de ordenamiento utiliza una técnica de dividir y conquistar?",
        "a": "Mergesort",
        "b": "Bubblesort",
        "c": "Insertionsort",
        "d": "Quicksort",
        "respuesta": "a",
        "categoria_id": 14
    },
    {
        "pregunta": "¿Qué algoritmo de búsqueda utiliza una técnica de dividir y conquistar?",
        "a": "Búsqueda secuencial",
        "b": "Búsqueda binaria",
        "c": "Búsqueda en profundidad",
        "d": "Búsqueda en amplitud",
        "respuesta": "b",
        "categoria_id": 14
    },
    {
        "pregunta": "¿Cuál es la complejidad temporal del algoritmo de búsqueda binaria en el peor de los casos?",
        "a": "O(1)",
        "b": "O(n)",
        "c": "O(log n)",
        "d": "O(n^2)",
        "respuesta": "c",
        "categoria_id": 14
    },
    {
        "pregunta": "¿Cuál es la complejidad temporal en el peor de los casos del algoritmo de ordenamiento Mergesort?",
        "a": "O(n)",
        "b": "O(n log n)",
        "c": "O(n^2)",
        "d": "O(n^14)",
        "respuesta": "b",
        "categoria_id": 14
    },
    {
        "pregunta": "¿Cuál es la complejidad temporal en el peor de los casos del algoritmo de ordenamiento Quicksort?",
        "a": "O(n)",
        "b": "O(n log n)",
        "c": "O(n^2)",
        "d": "O(n^14)",
        "respuesta": "c",
        "categoria_id": 14
      },
      {
        "pregunta": "¿Cuál es la complejidad temporal en el peor de los casos del algoritmo de búsqueda binaria?",
        "a": "O(1)",
        "b": "O(n)",
        "c": "O(log n)",
        "d": "O(n log n)",
        "respuesta": "c",
        "categoria_id": 14
      },
      {
        "pregunta": "¿Qué medida se puede tomar para evitar el peor caso del algoritmo de ordenamiento Quicksort?",
        "a": "Seleccionar siempre el primer elemento como pivote",
        "b": "Seleccionar siempre el último elemento como pivote",
        "c": "Seleccionar siempre el elemento del medio como pivote",
        "d": "Seleccionar el pivote de manera aleatoria",
        "respuesta": "d",
        "categoria_id": 14
      },
      {
        "pregunta": "¿Cuál es la complejidad temporal en el peor de los casos del algoritmo de cálculo de la serie de Fibonacci recursivo?",
        "a": "O(n)",
        "b": "O(n log n)",
        "c": "O(2^n)",
        "d": "O(n!)",
        "respuesta": "c",
        "categoria_id": 14
      }
]